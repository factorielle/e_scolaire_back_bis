# Generated by Django 3.2 on 2024-04-22 17:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('effectif', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100)),
                ('coefficient', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('telephone', models.CharField(max_length=20)),
                ('adresse', models.CharField(max_length=255)),
                ('profile_photo', models.ImageField(default='https://www.freepik.com/premium-vector/african-american-man-face_2585211.htm#fromView=search&page=1&position=40&uuid=76e184f4-fc4d-4e05-81c9-737edda42205', upload_to='', verbose_name='Photo de profil')),
                ('role', models.CharField(choices=[('parent', 'Parent'), ('prof', 'Professeur'), ('eleve', 'Élève'), ('admin', 'Administrateur')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_groups', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_permissions', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='StudentApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='StudentApp.user')),
                ('commentaires', models.TextField(default='')),
                ('date_generation', models.DateField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='StudentApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports_created', to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.dossier')),
                ('update_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=5)),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.matiere')),
            ],
        ),
        migrations.AddField(
            model_name='dossier',
            name='create_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dossiers_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dossier',
            name='update_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dossiers_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Appreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('rapport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.rapport')),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.IntegerField()),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='StudentApp.user')),
                ('matieres', models.ManyToManyField(to='StudentApp.Matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateField()),
                ('parent', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='StudentApp.parent')),
            ],
        ),
        migrations.CreateModel(
            name='Enseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.matiere')),
                ('professeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.professeur')),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='StudentApp.user')),
                ('date_naissance', models.DateField()),
                ('classes', models.ManyToManyField(through='StudentApp.Admission', to='StudentApp.Classe')),
            ],
        ),
        migrations.CreateModel(
            name='BulletinNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.note')),
                ('bulletin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.bulletin')),
            ],
        ),
        migrations.AddField(
            model_name='bulletin',
            name='notes',
            field=models.ManyToManyField(through='StudentApp.BulletinNote', to='StudentApp.Note'),
        ),
        migrations.AddField(
            model_name='admission',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentApp.eleve'),
        ),
    ]
